
create table USERCONNECTION (
	USERID         VARCHAR(255) not null,
	PROVIDERID     VARCHAR(255) not null,
	PROVIDERUSERID VARCHAR(255) not null,
	RANK           INTEGER not null,
	DISPLAYNAME    VARCHAR(255),
	PROFILEURL     VARCHAR(512),
	IMAGEURL       VARCHAR(512),
	ACCESSTOKEN    VARCHAR(255) not null,
	SECRET         VARCHAR(255),
	REFRESHTOKEN   VARCHAR(255),
	EXPIRETIME     BIGINT
);

alter table USERCONNECTION
add primary key (USERID, PROVIDERID, PROVIDERUSERID) ;

create unique index USERCONNECTIONRANK on USERCONNECTION (USERID, PROVIDERID, RANK) ;

create table USER_ACCOUNTS (
	ID         VARCHAR(255) not null,
	EMAIL      VARCHAR(100) not null,
	USER_NAME      VARCHAR(100) not null,
	FIRST_NAME VARCHAR(100),
	LAST_NAME  VARCHAR(100),
	PASSWORD   VARCHAR(255),
	ROLE       VARCHAR(20) not null,
	ENABLED    VARCHAR(1) default 'Y' not null
	LIVELLO	   INTEGER,
	PROVIDER   VARCHAR(30)
);

alter table USER_ACCOUNTS add image_url varchar(400);
ALTER TABLE USER_ACCOUNTS ADD punti INTEGER DEFAULT 0;
ALTER TABLE USER_ACCOUNTS ADD SESSO CHAR;
ALTER TABLE USER_ACCOUNTS ADD DATA_NASCITA DATE;

alter table USER_ACCOUNTS
add primary key (ID) ;
alter table USER_ACCOUNTS
add constraint User_Account_UK1 unique (EMAIL);

CREATE TABLE MESSAGGI (
	ID INT NOT NULL AUTO_INCREMENT,
	USER_FROM VARCHAR(255),
	USER_TO VARCHAR(255),
	TESTO VARCHAR(4000),
	DATA_INVIO DATE,
	CONSTRAINT PK_MESSAGGI PRIMARY KEY (ID)
);

ALTER TABLE MESSAGGI ADD CONSTRAINT FK_MESSAGGI_FROM FOREIGN KEY (USER_FROM) REFERENCES USER_ACCOUNTS(ID);
ALTER TABLE MESSAGGI ADD CONSTRAINT FK_MESSAGGI_TO FOREIGN KEY (USER_TO) REFERENCES USER_ACCOUNTS(ID);

CREATE TABLE NOTIFICHE (
	ID INT NOT NULL AUTO_INCREMENT,
	TIPO VARCHAR(255) COMMENT 'GESTITO DA UN ENUMERATORE',
	DESCRIZIONE VARCHAR(4000),
	DATA_NOTIFICA DATE,
	USER_TO VARCHAR(255),
	CONSTRAINT PK_NOTIFICHE PRIMARY KEY (ID)
);

ALTER TABLE NOTIFICHE ADD CONSTRAINT FK_NOTIFICHE_TO FOREIGN KEY (USER_TO) REFERENCES USER_ACCOUNTS(ID);

CREATE TABLE TIPO_ATTRAZIONE (
	ID INT AUTO_INCREMENT,
	DESCRIZIONE VARCHAR(255),
	CONSTRAINT PK_TIPO_ATTRAZIONE PRIMARY KEY (ID)
);

CREATE TABLE STATO_ATTRAZIONE (
	ID INT AUTO_INCREMENT,
	DESCRIZIONE VARCHAR(255),
	CONSTRAINT PK_STATO_ATTRAZIONE PRIMARY KEY (ID)
);

CREATE TABLE MARKER_POSIZIONE (
	ID INT AUTO_INCREMENT,
	LATITUDINE VARCHAR(200),
	LONGITUDINE VARCHAR(200),
	DESCRIZIONE VARCHAR(500),
	CONSTRAINT PK_MARKER_POSIZIONE PRIMARY KEY (ID)
);

CREATE TABLE ATTRAZIONI (
	ID INT AUTO_INCREMENT,
	NOME VARCHAR(255),
	DESCRIZIONE VARCHAR(4000),
	ID_TIPO_ATTRAZIONE INT COMMENT 'GESTITO CON TABELLA DI DECODIFICA',
	ACCESSO VARCHAR(400) COMMENT 'GESTITO DA UN ENUMERATORE ',
	ID_MARKER_POSIZIONE INT,
	ID_STATO_ATTRAZIONE INT COMMENT 'GESTITO CON UNA TABELLA DI DECODIFICA',
	USER_INSERIMENTO VARCHAR(255),
	DATA_INSERIMENTO DATE,
	CONSTRAINT PK_ATTRAZIONI PRIMARY KEY (ID)
);

ALTER TABLE ATTRAZIONI ADD CONSTRAINT FK_ATTRAZIONI_TIPO FOREIGN KEY (ID_TIPO_ATTRAZIONE) REFERENCES TIPO_ATTRAZIONE (ID);
ALTER TABLE ATTRAZIONI ADD CONSTRAINT FK_ATTRAZIONI_POSIZIONE FOREIGN KEY (ID_MARKER_POSIZIONE) REFERENCES MARKER_POSIZIONE (ID);
ALTER TABLE ATTRAZIONI ADD CONSTRAINT FK_ATTRAZIONI_STATO FOREIGN KEY (ID_STATO_ATTRAZIONE) REFERENCES STATO_ATTRAZIONE (ID);
ALTER TABLE ATTRAZIONI ADD CONSTRAINT FK_ATTRAZIONI_USERINS FOREIGN KEY (USER_INSERIMENTO) REFERENCES user_accounts(ID);

CREATE TABLE RECENSIONI (
	ID INT AUTO_INCREMENT,
	TITOLO VARCHAR(250),
	TESTO VARCHAR(4000),
	VALUTAZIONE DOUBLE,
	REAZIONE VARCHAR(100) COMMENT 'GESTITO DA UN ENUMERATORE',
	VISITA_CONFERMATA INT COMMENT 'BOOLEANO: 1 VISITATA, 0 ALTRIMENTI',
	ID_ATTRAZIONE INT,
	USER_INSERIMENTO VARCHAR(255),
	DATA_INSERIMENTO DATE,
	CONSTRAINT PK_RECENSIONI PRIMARY KEY (ID)
);

ALTER TABLE RECENSIONI ADD CONSTRAINT FK_RECENSIONI_ATTRAZIONE FOREIGN KEY (ID_ATTRAZIONE) REFERENCES ATTRAZIONI(ID);
ALTER TABLE RECENSIONI ADD CONSTRAINT FK_RECENSIONI_USERINS FOREIGN KEY (USER_INSERIMENTO) REFERENCES user_accounts(ID);

CREATE TABLE FOTO (
	ID INT AUTO_INCREMENT,
	PATH VARCHAR(400),
	DATA_CARICAMENTO DATE,
	ID_RECENSIONE INT,
	ID_ATTRAZIONE INT,
	PRINCIPALE INT COMMENT 'BOOLEANO: 1 è PRINCIPALE, 0 ALTRIMENTI',
	CONSTRAINT PK_FOTO PRIMARY KEY (ID)
);

ALTER TABLE FOTO ADD CONSTRAINT FK_FOTO_RECENSIONE FOREIGN KEY (ID_RECENSIONE) REFERENCES RECENSIONI(ID);
ALTER TABLE FOTO ADD CONSTRAINT FK_FOTO_ATTRAZIONE FOREIGN KEY (ID_ATTRAZIONE) REFERENCES ATTRAZIONI(ID);

CREATE TABLE WISHLIST (
	ID INT AUTO_INCREMENT,
	NOME VARCHAR(200),
	DATA_CREAZIONE DATE,
	USER_PROPRIETARIO VARCHAR(255),
	ARCHIVIATA INT DEFAULT 0 COMMENT 'BOOLEANO: 1 è STATA ARCHIVIATA (ITINERARIO), 0 ALTRIMENTI'
	CONSTRAINT PK_WISHLIST PRIMARY KEY (ID)
);

ALTER TABLE WISHLIST ADD CONSTRAINT FK_WISHLIST_USERPROP FOREIGN KEY (USER_PROPRIETARIO) REFERENCES user_accounts(ID);

CREATE TABLE REL_WISHLIST_ATTRAZIONE (
	ID INT AUTO_INCREMENT,
	ID_WISHLIST INT,
	ID_ATTRAZIONE INT,
	CONSTRAINT PK_REL_WISHLIST_ATTRAZIONE PRIMARY KEY (ID)
);

ALTER TABLE REL_WISHLIST_ATTRAZIONE ADD CONSTRAINT FK_RELWISHATTR_WISH FOREIGN KEY (ID_WISHLIST) REFERENCES WISHLIST(ID);
ALTER TABLE REL_WISHLIST_ATTRAZIONE ADD CONSTRAINT FK_RELWISHATTR_ATTR FOREIGN KEY (ID_ATTRAZIONE) REFERENCES ATTRAZIONI(ID);

CREATE TABLE ITINERARI (
	ID INT AUTO_INCREMENT,
	NOME VARCHAR(200),
	DATA_CREAZIONE DATE,
	USER_PROPRIETARIO VARCHAR(255),
	ARCHIVIATA INT DEFAULT 0 COMMENT 'BOOLEANO: 1 è STATA ARCHIVIATA (GIà FATTO), 0 ALTRIMENTI',
	DATA_INIZIO DATE,
	DATA_FINE DATE,
	NUMERO_GIORNI INT,
	CONSTRAINT PK_ITINERARI PRIMARY KEY (ID)
);

ALTER TABLE ITINERARI ADD CONSTRAINT FK_ITINERARI_USERPROP FOREIGN KEY (USER_PROPRIETARIO) REFERENCES user_accounts(ID);

CREATE TABLE VISITE (
	ID INT AUTO_INCREMENT,
	GIORNO INT,
	DATA_VISITA DATE,
	ORA VARCHAR(20),
	ETICHETTA VARCHAR(100),
	NOTA_PREC VARCHAR(4000),
	NOTA VARCHAR(4000),
	ID_ITINERARIO INT,
	ID_ATTRAZIONE INT,
	CONSTRAINT PK_VISITE PRIMARY KEY (ID)
);

ALTER TABLE VISITE ADD CONSTRAINT FK_VISITE_ITINERARIO FOREIGN KEY (ID_ITINERARIO) REFERENCES ITINERARI(ID);
ALTER TABLE VISITE ADD CONSTRAINT FK_VISITE_ATTRAZIONE FOREIGN KEY (ID_ATTRAZIONE) REFERENCES ATTRAZIONI(ID);
